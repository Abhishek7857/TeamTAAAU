//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeamTAAAU.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectTAAAUEntities5 : DbContext
    {
        public ProjectTAAAUEntities5()
            : base("name=ProjectTAAAUEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Credit_card> Credit_card { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<OrderStatu> OrderStatus { get; set; }
        public virtual DbSet<OrderTable> OrderTables { get; set; }
        public virtual DbSet<PaymentStatu> PaymentStatus { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Wallet> Wallets { get; set; }
        public virtual DbSet<WishList> WishLists { get; set; }
    
        public virtual int DeleteAddress(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAddress", idParameter);
        }
    
        public virtual int DeleteAdmin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAdmin", idParameter);
        }
    
        public virtual int DeleteCart(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCart", idParameter);
        }
    
        public virtual int DeleteCredit_card(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCredit_card", idParameter);
        }
    
        public virtual int DeleteCustomer(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", useridParameter);
        }
    
        public virtual int DeleteOrderStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrderStatus", idParameter);
        }
    
        public virtual int DeleteOrderTable(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrderTable", idParameter);
        }
    
        public virtual int DeletePaymentStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePaymentStatus", idParameter);
        }
    
        public virtual int DeleteProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", productIdParameter);
        }
    
        public virtual int DeleteWallet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWallet", idParameter);
        }
    
        public virtual int DeleteWishList(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWishList", idParameter);
        }
    
        public virtual int InserPaymentStatus(string paymentAmount, string paymentStatus)
        {
            var paymentAmountParameter = paymentAmount != null ?
                new ObjectParameter("paymentAmount", paymentAmount) :
                new ObjectParameter("paymentAmount", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("paymentStatus", paymentStatus) :
                new ObjectParameter("paymentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserPaymentStatus", paymentAmountParameter, paymentStatusParameter);
        }
    
        public virtual int InsertAddress(Nullable<int> houseno, string locality, string area, string landMark, string city, string p_state, string pincode)
        {
            var housenoParameter = houseno.HasValue ?
                new ObjectParameter("houseno", houseno) :
                new ObjectParameter("houseno", typeof(int));
    
            var localityParameter = locality != null ?
                new ObjectParameter("locality", locality) :
                new ObjectParameter("locality", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var landMarkParameter = landMark != null ?
                new ObjectParameter("landMark", landMark) :
                new ObjectParameter("landMark", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var p_stateParameter = p_state != null ?
                new ObjectParameter("p_state", p_state) :
                new ObjectParameter("p_state", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAddress", housenoParameter, localityParameter, areaParameter, landMarkParameter, cityParameter, p_stateParameter, pincodeParameter);
        }
    
        public virtual int InsertAdmin(string firstName, string lastName, string phoneNumber, string email, string password, string role, string gender)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAdmin", firstNameParameter, lastNameParameter, phoneNumberParameter, emailParameter, passwordParameter, roleParameter, genderParameter);
        }
    
        public virtual int InsertCart(Nullable<int> cust_id, Nullable<int> prod_id)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCart", cust_idParameter, prod_idParameter);
        }
    
        public virtual int InsertCredit_card(Nullable<int> cardNo, string cardHolder)
        {
            var cardNoParameter = cardNo.HasValue ?
                new ObjectParameter("cardNo", cardNo) :
                new ObjectParameter("cardNo", typeof(int));
    
            var cardHolderParameter = cardHolder != null ?
                new ObjectParameter("cardHolder", cardHolder) :
                new ObjectParameter("cardHolder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCredit_card", cardNoParameter, cardHolderParameter);
        }
    
        public virtual int InsertCustomer(Nullable<int> addid, string first_name, string last_name, string gender, string phoneNumber, string email, string password, Nullable<int> ccid)
        {
            var addidParameter = addid.HasValue ?
                new ObjectParameter("addid", addid) :
                new ObjectParameter("addid", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var ccidParameter = ccid.HasValue ?
                new ObjectParameter("ccid", ccid) :
                new ObjectParameter("ccid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", addidParameter, first_nameParameter, last_nameParameter, genderParameter, phoneNumberParameter, emailParameter, passwordParameter, ccidParameter);
        }
    
        public virtual int InsertOrderStatus(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrderStatus", statusParameter);
        }
    
        public virtual int InsertOrderTable(Nullable<int> cust_id, Nullable<int> prod_id, Nullable<System.DateTime> order_Date, Nullable<int> status_id, Nullable<int> payment_id)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            var order_DateParameter = order_Date.HasValue ?
                new ObjectParameter("order_Date", order_Date) :
                new ObjectParameter("order_Date", typeof(System.DateTime));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrderTable", cust_idParameter, prod_idParameter, order_DateParameter, status_idParameter, payment_idParameter);
        }
    
        public virtual int InsertProduct(string productName, string category, Nullable<double> price, string brand, string details, string aboutProduct, string countryOfOrigin, string seller, string userRating)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var aboutProductParameter = aboutProduct != null ?
                new ObjectParameter("aboutProduct", aboutProduct) :
                new ObjectParameter("aboutProduct", typeof(string));
    
            var countryOfOriginParameter = countryOfOrigin != null ?
                new ObjectParameter("countryOfOrigin", countryOfOrigin) :
                new ObjectParameter("countryOfOrigin", typeof(string));
    
            var sellerParameter = seller != null ?
                new ObjectParameter("seller", seller) :
                new ObjectParameter("seller", typeof(string));
    
            var userRatingParameter = userRating != null ?
                new ObjectParameter("userRating", userRating) :
                new ObjectParameter("userRating", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProduct", productNameParameter, categoryParameter, priceParameter, brandParameter, detailsParameter, aboutProductParameter, countryOfOriginParameter, sellerParameter, userRatingParameter);
        }
    
        public virtual int InsertWallet(Nullable<int> cust_id, string cupons, string giftCard, Nullable<decimal> addMoney, Nullable<decimal> spendMoney)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var cuponsParameter = cupons != null ?
                new ObjectParameter("cupons", cupons) :
                new ObjectParameter("cupons", typeof(string));
    
            var giftCardParameter = giftCard != null ?
                new ObjectParameter("giftCard", giftCard) :
                new ObjectParameter("giftCard", typeof(string));
    
            var addMoneyParameter = addMoney.HasValue ?
                new ObjectParameter("addMoney", addMoney) :
                new ObjectParameter("addMoney", typeof(decimal));
    
            var spendMoneyParameter = spendMoney.HasValue ?
                new ObjectParameter("spendMoney", spendMoney) :
                new ObjectParameter("spendMoney", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWallet", cust_idParameter, cuponsParameter, giftCardParameter, addMoneyParameter, spendMoneyParameter);
        }
    
        public virtual int InsertWishList(Nullable<int> cust_id, Nullable<int> prod_id)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWishList", cust_idParameter, prod_idParameter);
        }
    
        public virtual int UpdateAddress(Nullable<int> houseno, string locality, string area, string landMark, string city, string p_state, string pincode)
        {
            var housenoParameter = houseno.HasValue ?
                new ObjectParameter("houseno", houseno) :
                new ObjectParameter("houseno", typeof(int));
    
            var localityParameter = locality != null ?
                new ObjectParameter("locality", locality) :
                new ObjectParameter("locality", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var landMarkParameter = landMark != null ?
                new ObjectParameter("landMark", landMark) :
                new ObjectParameter("landMark", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var p_stateParameter = p_state != null ?
                new ObjectParameter("p_state", p_state) :
                new ObjectParameter("p_state", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAddress", housenoParameter, localityParameter, areaParameter, landMarkParameter, cityParameter, p_stateParameter, pincodeParameter);
        }
    
        public virtual int UpdateAdmin(Nullable<int> id, string firstName, string lastName, string phoneNumber, string email, string password, string role, string gender)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAdmin", idParameter, firstNameParameter, lastNameParameter, phoneNumberParameter, emailParameter, passwordParameter, roleParameter, genderParameter);
        }
    
        public virtual int UpdateCart(Nullable<int> id, Nullable<int> cust_id, Nullable<int> prod_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCart", idParameter, cust_idParameter, prod_idParameter);
        }
    
        public virtual int UpdateCredit_card(Nullable<int> id, Nullable<int> cardNo, string cardHolder)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cardNoParameter = cardNo.HasValue ?
                new ObjectParameter("cardNo", cardNo) :
                new ObjectParameter("cardNo", typeof(int));
    
            var cardHolderParameter = cardHolder != null ?
                new ObjectParameter("cardHolder", cardHolder) :
                new ObjectParameter("cardHolder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCredit_card", idParameter, cardNoParameter, cardHolderParameter);
        }
    
        public virtual int UpdateCustomer(Nullable<int> userid, string first_name, string last_name, string gender, string phoneNumber, string email, string password)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", useridParameter, first_nameParameter, last_nameParameter, genderParameter, phoneNumberParameter, emailParameter, passwordParameter);
        }
    
        public virtual int UpdateOrderStatus(Nullable<int> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderStatus", idParameter, statusParameter);
        }
    
        public virtual int UpdateOrderTable(Nullable<int> id, Nullable<int> cust_id, Nullable<int> prod_id, Nullable<System.DateTime> order_Date, Nullable<int> status_id, Nullable<int> payment_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            var order_DateParameter = order_Date.HasValue ?
                new ObjectParameter("order_Date", order_Date) :
                new ObjectParameter("order_Date", typeof(System.DateTime));
    
            var status_idParameter = status_id.HasValue ?
                new ObjectParameter("status_id", status_id) :
                new ObjectParameter("status_id", typeof(int));
    
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderTable", idParameter, cust_idParameter, prod_idParameter, order_DateParameter, status_idParameter, payment_idParameter);
        }
    
        public virtual int UpdatePaymentStatus(Nullable<int> id, string paymentAmount, string paymentStatus)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var paymentAmountParameter = paymentAmount != null ?
                new ObjectParameter("paymentAmount", paymentAmount) :
                new ObjectParameter("paymentAmount", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("paymentStatus", paymentStatus) :
                new ObjectParameter("paymentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePaymentStatus", idParameter, paymentAmountParameter, paymentStatusParameter);
        }
    
        public virtual int UpdateProduct(Nullable<int> productId, string productName, string category, Nullable<double> price, string brand, string details, string aboutProduct, string countryOfOrigin, string seller, string userRating)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("details", details) :
                new ObjectParameter("details", typeof(string));
    
            var aboutProductParameter = aboutProduct != null ?
                new ObjectParameter("aboutProduct", aboutProduct) :
                new ObjectParameter("aboutProduct", typeof(string));
    
            var countryOfOriginParameter = countryOfOrigin != null ?
                new ObjectParameter("countryOfOrigin", countryOfOrigin) :
                new ObjectParameter("countryOfOrigin", typeof(string));
    
            var sellerParameter = seller != null ?
                new ObjectParameter("seller", seller) :
                new ObjectParameter("seller", typeof(string));
    
            var userRatingParameter = userRating != null ?
                new ObjectParameter("userRating", userRating) :
                new ObjectParameter("userRating", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", productIdParameter, productNameParameter, categoryParameter, priceParameter, brandParameter, detailsParameter, aboutProductParameter, countryOfOriginParameter, sellerParameter, userRatingParameter);
        }
    
        public virtual int UpdateWallet(Nullable<int> id, Nullable<int> cust_id, string cupons, string giftCard, Nullable<decimal> addMoney, Nullable<decimal> spendMoney)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var cuponsParameter = cupons != null ?
                new ObjectParameter("cupons", cupons) :
                new ObjectParameter("cupons", typeof(string));
    
            var giftCardParameter = giftCard != null ?
                new ObjectParameter("giftCard", giftCard) :
                new ObjectParameter("giftCard", typeof(string));
    
            var addMoneyParameter = addMoney.HasValue ?
                new ObjectParameter("addMoney", addMoney) :
                new ObjectParameter("addMoney", typeof(decimal));
    
            var spendMoneyParameter = spendMoney.HasValue ?
                new ObjectParameter("spendMoney", spendMoney) :
                new ObjectParameter("spendMoney", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWallet", idParameter, cust_idParameter, cuponsParameter, giftCardParameter, addMoneyParameter, spendMoneyParameter);
        }
    
        public virtual int UpdateWishList(Nullable<int> id, Nullable<int> cust_id, Nullable<int> prod_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var prod_idParameter = prod_id.HasValue ?
                new ObjectParameter("prod_id", prod_id) :
                new ObjectParameter("prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWishList", idParameter, cust_idParameter, prod_idParameter);
        }
    }
}
